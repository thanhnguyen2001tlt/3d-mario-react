/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\mario_shell_red.glb 
Author: Thomas Fugier (https://sketchfab.com/thomas.fugier)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mario-shell-red-76a81ff57398423d80800259c3d48262
Title: Mario Shell Red
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { BallCollider, RigidBody, vec3 } from "@react-three/rapier";
import { useFrame } from "@react-three/fiber";
import { useStore } from "../../store";

export function Shell({ id, position, rotation, setNetworkShells, networkShells, ...props}) {
  const { nodes, materials } = useGLTF("./models/items/mario_shell_red.glb");
  const rigidBody = useRef();
  const ref = useRef();

  const shell_speed = 100;
  const {actions} = useStore(); 

  useEffect(() => {
    const velocity = {
      x: -Math.sin(rotation) * shell_speed,
      y: 0,
      z: -Math.cos(rotation) * shell_speed,
    };

    rigidBody.current.setLinvel(velocity, true);
  }, []);

  useFrame((state, delta) => {
    if(rigidBody.current && ref.current){
      const rigidBodyPosition = rigidBody.current.translation();
      ref.current.position.set(
        rigidBodyPosition.x,
        rigidBodyPosition.y,
        rigidBodyPosition.z
      );
      ref.current.rotation.z += 0.2 * delta * 144;
    }
  });

  return (
    <group dispose={null}>
      <RigidBody
        ref={rigidBody}
        type="dynamic"
        position={[position.x, position.y, position.z]}
        name="shell"
        colliders={false}
        onCollisionEnter={(other) => {
          if (other.rigidBodyObject.name === "player") {
            actions.setShouldSlowDown(true);
            setNetworkShells(
              networkShells.filter((shell) => shell.id !== id)
            );
          }
        }}
      >
        <BallCollider args={[0.5]} />
      </RigidBody>
      <mesh
        ref={ref}
        geometry={nodes.defaultMaterial.geometry}
        material={materials.Shell}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.6}
      />
    </group>
  );
}

useGLTF.preload("./models/items/mario_shell_red.glb");
